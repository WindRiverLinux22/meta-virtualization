From f774c09cb2936e949d67fba6e268437bab238a16 Mon Sep 17 00:00:00 2001
From: Mingli Yu <mingli.yu@windriver.com>
Date: Fri, 21 Oct 2022 16:05:28 +0800
Subject: [PATCH] Merge pull request #15618 from mheon/add_group_to_addtlgroups

Add container GID to additional groups

CVE: CVE-2022-2989

Upstream-Status: Backport[https://github.com/containers/podman/commit/5c7f28336171f0a5137edd274e45608120d31289]

Signed-off-by: Mingli Yu <mingli.yu@windriver.com>
---
 libpod/container_internal_linux.go |  1 +
 pkg/specgen/namespaces.go          |  1 +
 test/e2e/run_test.go               | 11 +++++++++++
 3 files changed, 13 insertions(+)

diff --git a/src/import/libpod/container_internal_linux.go b/src/import/libpod/container_internal_linux.go
index f7c8c190f..0f073f750 100644
--- a/src/import/libpod/container_internal_linux.go
+++ b/src/import/libpod/container_internal_linux.go
@@ -648,6 +648,7 @@ func (c *Container) generateSpec(ctx context.Context) (*spec.Spec, error) {
 		// User and Group must go together
 		g.SetProcessUID(uint32(execUser.Uid))
 		g.SetProcessGID(uint32(execUser.Gid))
+		g.AddProcessAdditionalGid(uint32(execUser.Gid))
 	}
 
 	if c.config.Umask != "" {
diff --git a/src/import/pkg/specgen/namespaces.go b/src/import/pkg/specgen/namespaces.go
index e672bc65f..de2b07f6d 100644
--- a/src/import/pkg/specgen/namespaces.go
+++ b/src/import/pkg/specgen/namespaces.go
@@ -512,6 +512,7 @@ func SetupUserNS(idmappings *storage.IDMappingOptions, userns Namespace, g *gene
 		idmappings = mappings
 		g.SetProcessUID(uint32(uid))
 		g.SetProcessGID(uint32(gid))
+		g.AddProcessAdditionalGid(uint32(gid))
 		user = fmt.Sprintf("%d:%d", uid, gid)
 		fallthrough
 	case Private:
diff --git a/src/import/test/e2e/run_test.go b/src/import/test/e2e/run_test.go
index 81dcc4342..5b73b8cd3 100644
--- a/src/import/test/e2e/run_test.go
+++ b/src/import/test/e2e/run_test.go
@@ -886,6 +886,7 @@ USER bin`, BB)
 		session.WaitWithDefaultTimeout()
 		Expect(session).Should(Exit(0))
 		Expect(session.OutputToString()).To(ContainSubstring("uid=0(root) gid=0(root)"))
+		Expect(session.OutputToString()).To(Equal("uid=1234(1234) gid=0(root) groups=0(root)"))
 	})
 
 	It("podman run with user (integer, not in /etc/passwd)", func() {
@@ -914,6 +915,7 @@ USER bin`, BB)
 		session.WaitWithDefaultTimeout()
 		Expect(session).Should(Exit(0))
 		Expect(session.OutputToString()).To(Equal("uid=8(mail) gid=21(ftp)"))
+		Expect(session.OutputToString()).To(Equal("uid=8(mail) gid=21(ftp) groups=21(ftp)"))
 	})
 
 	It("podman run with user:group (integer:groupname)", func() {
@@ -921,6 +923,7 @@ USER bin`, BB)
 		session.WaitWithDefaultTimeout()
 		Expect(session).Should(Exit(0))
 		Expect(session.OutputToString()).To(Equal("uid=8(mail) gid=21(ftp)"))
+		Expect(session.OutputToString()).To(Equal("uid=8(mail) gid=21(ftp) groups=21(ftp)"))
 	})
 
 	It("podman run with user, verify caps dropped", func() {
@@ -931,6 +934,14 @@ USER bin`, BB)
 		Expect("0000000000000000").To(Equal(capEff[1]))
 	})
 
+	It("podman run with user, verify group added", func() {
+		session := podmanTest.Podman([]string{"run", "--rm", "--user=1000:1000", ALPINE, "grep", "Groups:", "/proc/self/status"})
+		session.WaitWithDefaultTimeout()
+		Expect(session).Should(Exit(0))
+		groups := strings.Split(session.OutputToString(), " ")[1]
+		Expect("1000").To(Equal(groups))
+	})
+
 	It("podman run with attach stdin outputs container ID", func() {
 		session := podmanTest.Podman([]string{"run", "--attach", "stdin", ALPINE, "printenv"})
 		session.WaitWithDefaultTimeout()
-- 
2.25.1

